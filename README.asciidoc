emacs-compbio-kit
=================

== package managers

this is what i understand at the moment (feb 10 2011) about package managers:

- package.el is used as the package manager in official emacs
- at the moment package.el does not support git repositories, as far as i can tell
- it seems that the development on package.el is stalled at the moment, but it will be the official emacs package manager (which is probably a shame, considering that...)
- el-get can grab git repos as well as apt-get and package.el(elpa) repos
- epackage/DELPS can do something similar


So:

it is best to move the big LISPs directories (org-mode and ESS) out of my version control and put them in some other version control (el-get or package.el through ELPA)

- two feasible ways to do so:
1. use git submodules (See http://github.com/eschulte/emacs-starter-kit/ for an example) and do a git pull for everything you need
2. use el-get, which automates retrieval of git repos, etc.

I decided to try the second option because it has the least setup time. Since it's probable I won't remember all the git submodules architecture next time I change stuff around in this folder, I figured it would be best to choose a method that was easily parseable.

Some of the reasoning is also given by the author of el-get (http://tapoueh.org/articles/news/_el-get_reaches_1.0.html)


=== el-get
To update: issue 'M-x el-get-update' or go to the directory ~/.emacs.d/el-get/el-get and do a 'git pull'

(At least in emacs < 24.1) one needs to either install 'package.el' as a recipe or set the 'package-user-dir' variable appropriately


== TODO
- fix ESS installation. I believe it does not combile because of texinfo/macports problem
- To turn off max highlighting only for Dired mode, do ‘M-x customize-option font-lock-maximum-decoration’ and insert an entry for ‘dired-mode’ that specifies ‘default’ highlighting for it.

- incorporate my-python.el with the autocomplete function, etc. see if this https://github.com/gabrielelanaro/emacs-starter-kit/blob/master/starter-kit-python.el has any useful customization

- incorporate the useful pieces of the emacs-starter-kit 
-- https://github.com/squ1b3r/emacs-starter-kit this is also using el-get
-- https://github.com/technomancy/emacs-starter-kit/tree this is the original
-- https://github.com/kjhealy/emacs-starter-kit focus on R/ESS/latex
-- 

- learn ido-mode http://www.masteringemacs.org/articles/2010/10/10/introduction-to-ido-mode/ and define the customizations that we want/need

- fix autocomplete + yasnippet, so that tab actually expands yasnippets
